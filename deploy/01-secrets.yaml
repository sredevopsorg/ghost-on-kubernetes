apiVersion: v1
kind: Secret
metadata:
  name: mysql-ghost-on-kubernetes-config
  namespace: ghost-on-kubernetes
  labels:
    app: mysql-ghost-on-kubernetes
    app.kubernetes.io/name: mysql-ghost-on-kubernetes-config
    app.kubernetes.io/instance: ghost-on-kubernetes
    app.kubernetes.io/version: "5.8"
    app.kubernetes.io/component: database-secret
    app.kubernetes.io/part-of: ghost-on-kubernetes
    app.kubernetes.io/managed-by: sredevopsorg
type: Opaque
stringData:
  MYSQL_DATABASE: mysql-db-name # Same as in config.production.json
  MYSQL_USER: mysql-db-user # Same as in config.production.json
  MYSQL_PASSWORD: mysql-db-password # Same as in config.production.json
  MYSQL_ROOT_PASSWORD: mysql-db-root-password # Same as in config.production.json
  MYSQL_HOST: '%' # Same as in config.production.json


---
apiVersion: v1
kind: Secret
metadata:
  name: yourdomain-com-tls
  namespace: ghost-on-kubernetes
  labels:
    app: ghost-on-kubernetes
    app.kubernetes.io/name: ghost-on-kubernetes
    app.kubernetes.io/instance: ghost-on-kubernetes
    app.kubernetes.io/version: "5.8"
    app.kubernetes.io/component: secret-tls
    app.kubernetes.io/part-of: ghost-on-kubernetes
    app.kubernetes.io/managed-by: sredevopsorg

type: kubernetes.io/tls
stringData:
  tls.crt: content-tls-crt-base64 # Optional, if you want to use your own TLS certificate
  tls.key: content-tls-key-base64 # Optional, if you want to use your own TLS certificate
