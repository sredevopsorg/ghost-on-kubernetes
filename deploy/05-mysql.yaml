apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: ghost-on-kubernetes-mysql
  namespace: ghost-on-kubernetes
  labels:
    app: ghost-on-kubernetes-mysql
    app.kubernetes.io/name: ghost-on-kubernetes-mysql
    app.kubernetes.io/instance: ghost-on-kubernetes
    app.kubernetes.io/version: '5.92'
    app.kubernetes.io/component: database
    app.kubernetes.io/part-of: ghost-on-kubernetes
    
spec:
  serviceName: ghost-on-kubernetes-mysql-service
  replicas: 1
  selector:
    matchLabels:
      app: ghost-on-kubernetes-mysql
  template:
    metadata:
      labels:
        app: ghost-on-kubernetes-mysql
    spec:
      initContainers:
      - name: ghost-on-kubernetes-mysql-init
        securityContext:
          allowPrivilegeEscalation: false
          privileged: false
          readOnlyRootFilesystem: true
        image: docker.io/busybox:stable-musl
        imagePullPolicy: Always # You can change this value according to your needs
        command:
        - /bin/sh
        - -c
        - |
          set -e
          echo 'Changing ownership of mysql mount directory to 65534:65534'
          chown -Rfv 65534:65534 /mnt/mysql || echo 'Error changing ownership of mysql mount directory to 65534:65534'
          echo 'Changing ownership of tmp mount directory to 65534:65534'
          chown -Rfv 65534:65534 /mnt/tmp || echo 'Error changing ownership of tmp mount directory to 65534:65534'
          echo 'Changing ownership of socket mount directory to 65534:65534'
          chown -Rfv 65534:65534 /mnt/var/run/mysqld || echo 'Error changing ownership of socket mount directory to 65534:65534'
          
          
        volumeMounts:
        - name: ghost-on-kubernetes-mysql-volume
          mountPath: /mnt/mysql
          subPath: mysql-empty-subdir
          readOnly: false

        - name: ghost-on-kubernetes-mysql-tmp
          mountPath: /mnt/tmp
          readOnly: false

        - name: ghost-on-kubernetes-mysql-socket
          mountPath: /mnt/var/run/mysqld
          readOnly: false
        
        # YOu can ajust the resources according to your needs
        resources:
          requests:
            memory: 0Mi
            cpu: 0m
          limits:
            memory: 1Gi
            cpu: 900m

      containers:
      - name: ghost-on-kubernetes-mysql
        securityContext:
          allowPrivilegeEscalation: false
          privileged: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 65534

        image: docker.io/mysql:8.4
        imagePullPolicy: Always # You can change this value according to your needs
        envFrom:
        - secretRef:
            name: ghost-on-kubernetes-mysql-env
        resources:
          requests:
            memory: 500Mi # You can change this value according to your needs
            cpu: 300m # You can change this value according to your needs
          limits:
            memory: 1Gi # You can change this value according to your needs
            cpu: 900m # You can change this value according to your needs
        ports:
        - containerPort: 3306
          protocol: TCP
          name: mysqlgh
        volumeMounts:
        - name: ghost-on-kubernetes-mysql-volume
          mountPath: /var/lib/mysql
          subPath: mysql-empty-subdir
          readOnly: false

        - name: ghost-on-kubernetes-mysql-tmp
          mountPath: /tmp
          readOnly: false

        - name: ghost-on-kubernetes-mysql-socket
          mountPath: /var/run/mysqld
          readOnly: false

      automountServiceAccountToken: false

      # Optional: Uncomment the following to specify node selectors
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: node-role.kubernetes.io/worker
                    operator: In
                    values:
                      - 'true'

      securityContext:
        seccompProfile:
          type: RuntimeDefault

      volumes:
      - name: ghost-on-kubernetes-mysql-volume
        persistentVolumeClaim:
          claimName: ghost-on-kubernetes-mysql-pvc
      - name: ghost-on-kubernetes-mysql-tmp
        emptyDir:
          sizeLimit: 128Mi
      - name: ghost-on-kubernetes-mysql-socket
        emptyDir:
          sizeLimit: 128Mi
